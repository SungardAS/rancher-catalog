
data-concourse:
  image: busybox
  command: /bin/true
  net: none
  volumes:
  - /data-concourse
  labels:
    io.rancher.container.start_once: 'true'
    io.rancher.scheduler.global: 'true'
    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}

concourse-web:
  image: gregorycox/concourse-web:latest
  ports: ["8080:8080"]
  volumes: ["/data-concourse/keys:/concourse-keys"]
  environment:
    - ETCD=etcd.etcd-ha.rancher.internal
    - CONCOURSE_BASIC_AUTH_USERNAME=${BASIC_AUTH_USER}
    - CONCOURSE_BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASS}
    - CONCOURSE_EXTERNAL_URL=${CONCOURSE_EXTERNAL_URL}
    - CONCOURSE_POSTGRES_DATA_SOURCE=${POSTGRES_DATA_SOURCE}
  labels:
    io.rancher.container.dns: 'true'
    io.rancher.sidekicks: data-concourse
    io.rancher.scheduler.global: 'true'
    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    io.rancher.container.pull_image: always

concourse-worker:
  image: gregorycox/concourse-worker:latest
  privileged: true
  volumes: ["/data-concourse/keys:/concourse-keys"]
  environment:
    - ETCD=etcd.etcd-ha.rancher.internal
    - CONCOURSE_WORK_DIR=/opt/concourse/worker
  labels:
    io.rancher.container.dns: 'true'
    io.rancher.sidekicks: data-concourse
    io.rancher.scheduler.global: 'true'
    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    io.rancher.container.pull_image: always

